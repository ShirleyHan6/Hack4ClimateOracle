import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

normal = pd.read_csv("./data/ground.csv")
normal = normal[1:]

anomaly = pd.read_csv('./data/ground_anomaly.csv')
anomaly = anomaly[1:]

normal = normal.drop(['TIMESTAMP', 'Pyra1_Wm2_Avg', 'Pyra2_Wm2_Avg', 'AmbTemp_C_Avg',
                       'PwrMtrP_kW_Avg','InvPAC_kW_Avg'], axis=1)

anomaly = anomaly.drop(['TIMESTAMP', 'Pyra1_Wm2_Avg', 'Pyra2_Wm2_Avg', 'AmbTemp_C_Avg',
                      'PwrMtrP_kW_Avg', 'InvPAC_kW_Avg'], axis=1)
model_anomaly_list = [484, 534, 535, 538, 548, 550, 551, 553, 554, 559, 561, 574, 576, 577, 579, 580, 581, 589, 592, 609, 611, 622, 623, 629, 632, 636, 639, 641, 644, 646, 660, 671, 681, 688, 692, 696, 697, 699, 704, 705, 711, 712, 714, 728, 737, 739, 741, 742, 744, 751, 753, 755, 758, 767, 773, 774, 775, 779, 784, 785, 787, 789, 791, 799, 800, 805, 808, 811, 819, 820, 822, 824, 828, 830, 831, 836, 840, 841, 849, 852, 854, 870, 876, 881, 885, 888, 904, 907, 910, 913, 915, 918, 934, 936, 937, 938, 940, 943, 948, 951, 4963, 4966, 4967, 4970, 4973, 4974, 4976, 4985, 4990, 4995, 4997, 4999, 5002, 5009, 5015, 5022, 5025, 5099, 5101, 5103, 5106, 5110, 5112, 5129, 5131, 5134, 5137, 5138, 5145, 5147, 5149, 5154, 5158, 5163, 5167, 5176, 5179, 5188, 5194, 5199, 5201, 5205, 5209, 5214, 5219, 5221, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5231, 5232, 5233, 5235, 5236, 5237, 5239, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 7682, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7710, 7711, 7712, 7713, 7714, 7720, 7723, 7725, 7727, 7731, 7735, 7739, 7742, 7750, 7752, 7757, 7758, 7766, 7774, 7775, 7781, 7785, 7812, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7825, 7826, 7827, 7828, 7829, 7830, 7833, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7885, 7923, 7943, 7946, 7947, 7948, 7954, 9199, 9262, 9264, 9265, 9266, 9281, 9282, 9286, 9297, 9303, 9304, 9317, 9318, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9344, 9347, 9355, 9356, 9357, 9359, 9361, 9362, 9363, 9365, 9366, 9367, 9369, 9370, 9372, 9373, 9374, 9376, 9377, 9378, 9379, 9380, 9382, 9383, 9384, 9386, 9387, 9393, 9396, 9397, 9400, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9413, 9414, 9415, 9416, 9417, 9418, 9419, 9420, 9421, 9422, 9423, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, 9553, 9554, 9555]

abnormal = 0

abnormal_dict = {}
model_abnormal_dict = {}



plt.plot(abnormal_dict.keys(), abnormal_dict.values())

col=[]
final_anomaly = []
divider = 0
dominator = 0
for i in range(10000):
    num = 0
    if i in model_anomaly_list:
        if normal['InvPDC_kW_Avg'].iloc[i] == anomaly['InvPDC_kW_Avg'].iloc[i]:
            col.append('r')
        else:
            col.append('g')
            divider = divider + 1
    else:
        if normal['InvPDC_kW_Avg'].iloc[i] == anomaly['InvPDC_kW_Avg'].iloc[i]:
            col.append('g')
            divider = divider + 1
        else:
            col.append('b')
    final_anomaly.append(anomaly['InvPDC_kW_Avg'].iloc[i])

    if normal['InvPDC_kW_Avg'].iloc[i] == anomaly['InvPDC_kW_Avg'].iloc[i]:
        print(True)


print(divider)
#scatter plot
# for i in range(10000):
#     print(final_anomaly[i],normal['RECORD'].iloc[i])
#     plt.scatter(normal['RECORD'].iloc[i], final_anomaly[i],c=col[i],s=5)
plt.scatter(normal['RECORD'][:10000],final_anomaly[:10000], c=col[:10000], s=5)
plt.show()


print(model_anomaly_list)